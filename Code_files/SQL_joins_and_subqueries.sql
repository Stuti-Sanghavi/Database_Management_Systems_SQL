USE Chipotle;

-- Q1: What is the average order size per order? (Subquery)

SELECT AVG(order_size) AS Order_Average
  FROM
  (SELECT order_id, SUM(quantity) AS Order_Size
  FROM order_line
  GROUP BY order_id) AS T;
  
    
-- Q2: Least priced item in the menu? (Subqueries)
SELECT Item_Name, Price
FROM Item
WHERE price IN (select min(price) from item);

-- Q3: What is the total revenue generated by month?
SELECT Monthname(o.date_time) AS 'Month' , SUM(ol.quantity * i.price) as 'Total revenue'
FROM orders o INNER JOIN order_line ol 
ON o.order_id = ol.order_id 
INNER JOIN item i ON ol.item_id = i.item_id
GROUP BY 1
ORDER BY 2 DESC;

-- Q4: What is the average revenue generated per order?
SELECT ROUND(AVG(Sum_Revenue),2) AS 'Average_Revenue' from 
(SELECT ol.order_id , (SUM(ol.quantity * i.price)) AS 'Sum_Revenue'
FROM order_line ol INNER JOIN item i
ON ol.item_id = i.item_id
GROUP BY 1
ORDER BY 1 DESC) as t;

-- Q5: What is the average number of orders in a day?
SELECT ROUND(AVG(daily_orders),2) AS 'Average_number_of_orders' FROM
(SELECT Date(date_time) order_date, COUNT(*) AS daily_orders
FROM orders
GROUP BY 1
ORDER BY 1 ASC) T;

-- Other way of doing above question
SELECT Count(order_id) AS 'Total_Orders', COUNT(distinct(DAY(Date_time))) AS 'Total_days', 
		ROUND((Count(order_id)/COUNT(distinct(DAY(Date_time)))),2) AS 'Average_number_of_orders'
FROM orders o;

-- Q6: Top 5 customers by revenue
SELECT CONCAT(first_name, '', last_name) AS 'Customer_Name', SUM(quantity * price) AS 'Revenue'
FROM customer c 
LEFT JOIN orders o ON c.customer_id_ = o.customer_id_
LEFT JOIN order_line ol ON o.order_id = ol.order_id
LEFT JOIN  item i ON ol.item_id = i.item_id
GROUP BY 1
ORDER BY 2 DESC
LIMIT 5;

-- Q7: What is business hour of the day by number of transactions? (for determining busy hours)
SELECT HOUR(date_time) As 'Hours_in_24_hour_format', Count(order_id) as 'Number oftransactions' from 
orders o
group by 1
order by 2 desc;



-- Q8: Number of customers by each store?
SELECT Address, City, COUNT(o.customer_id_) AS 'Number_of_customers'
FROM store s 
LEFT JOIN orders o ON s.store_id = o.store_id
GROUP BY 1,2
ORDER BY 3 DESC;


